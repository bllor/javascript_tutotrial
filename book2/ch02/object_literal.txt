객체 리터럴: 변수를 선언하고 정보를 모아 중괄호를 사용해 객체를 표현하는 것
형식
{
    속성이름 : 속성값
}
속성이름은 문자열이여야 하고, 속성 값에는 자바스크립트의 모든 값이 들어올 수 있다
만약 객체의 속성값으로 함수가 들어간다면 이 속성은 메서드라고 부른다.
let user = {
    nickname:'동일'
}
user['nickname'] 또는 user.nickname으로 정보를 불러올 수 있다.
객체 내에 존재하지 않는 속성이름을 넣을 경우 undefined가 출력된다.
1.객체 속성을 추가,수정,삭제하기
[1]추가
변수.속성 = 값;을 할 경우 해당 속성과 값으로 변수 객체에 추가가 된다.
[2]수정
변수.속성 = 수정값;을 할 경우 해당 값으로 수정된다.
[3]삭제
delete 변수.속성 을 할경우 해당 속성과 값이 삭제된다.

2.참조와 복사
[1]참조: 변수가 같은 객체를 가리키고 있어서 하나의 객체의 값을 변경할 경우 다른 객체도 같이 변하는 것
let a = {name:'dongil'};
let b = a;
console.log(b.name)--> dongil
a['name'] = heeji
console.log(b.name)--> heeji
a와 b는 서로 참조관계라고 할 수 있다.

[2]복사: 참조관계가 생기지 않는 것
(1)얕은 복사: 외부 객체만 복사되고 내부 객체는 참조관계를 유지하는 복사
(2)깊은 복사: 내부 객체까지 관계가 끊기면서 복사되는 것
ex)
얕은 복사
const arr = [{age:29},{name:동일}]
const a1 = [...arr];
console.log(arr===a1) ; false 
console.log(arr[0]===a1[0]) ; true 

깊은 복사
const arr = [{age:29},{name:동일}]
const a1 = JSON.parse(JSON.stringify(arr))
console.log(arr===a1) ; false 
console.log(arr[0]===a1[0]) ; false 
