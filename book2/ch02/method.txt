함수를 인수로 받는 메서드
1.foreach 와 map
배열.foreach(함수)
ex)
let arr =['a','q','w','e']
arr.foreach((value,index)=>{
    console.log(value,index)
    a 0
    q 1
    w 2
    e 3
})

배열.map(함수)
ex)
let arr = [1,2,3,4,5]
arr.map((v)=>{
    return v+1
})
console.log(arr)--> 2,3,4,5,6

2.find(),findIndex(),filter()
[1]find(<콜백함수>)
콜백함수의 반환값이 true인 요소를 찾는 메서드로, true값이 여러 개가 있을 경우 제일 첫번째 요소을 출력한다.
[2]findIndex()
찾은 요소의 인덱스를 반환하고, 찾지 못했다면 -1을 반환합니다.
[3]filter
find()처럼 콜백 함수의 반환값이 true가 되는 요소를 찾지만, 하나만 찾는 것이 아니라 해당하는 모든 요소를 찾아 결과를 배열로 반환합니다.

3.sort()
배열의 요소들을 규칙대로 정렬할 때 사용
배열.sort((a,b)=>반환값)
(a,b)=>반환값에는 a-b, b-a가 올 수 있는데
a-b는 오름차순으로 정렬, b-a라면 내림차순으로 정렬한다는게 된다.

ex)
let arr = [1,5,4,2,3]
arr.sort((a,b)=>a-b)--> 12345
arr.sort((a,b)=>b-a)--> 54321


4.reduce()
배열에 있는 반복 메서드의 일종으로, 배열의 요소들을 하나의 값으로 합칩니다.
초기 값이 없으면 배열의 첫 번째 요소가 초기 값이 됩니다.
배열.reduce((누적값,현재값)=>{
    return 누적값+현재값
})

ex) let arr = [1,2,3,4,5]
arr.reduce((a,c)=>a+c)--> 15

5.every()와 some()
배열.every(<조건 함수>)--> 배열의 요소 중 하나라도 조건에 만족하지 못한다면 false를 반환
배열.some(<조건 함수>)--> 배열의 요소 중 하나라도 조건에 만족한다면 true를 반환
